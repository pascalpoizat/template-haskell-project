# documentation
# https://github.com/haskell/actions
# https://kodimensional.dev/github-actions

# uses
# - actions/checkout (3)
#     https://github.com/marketplace/actions/checkout
# - actions/cache (3)
#     https://github.com/marketplace/actions/cache
# - haskell/actions/setup (2)
#     https://github.com/haskell/actions
# - softprops/action-gh-release (1)
#     https://github.com/softprops/action-gh-release

# TODO: add artifact release

name: CI

# run when push on main
on:
  push:
    branches: [master]
env:
  program: template-haskell-project
  api_key:
    secure: HsbREGVwE2R42Qq3CA1p3SYI/CCiEj6DLKww+yBKM2MQpa2RKu5igGTz5I3k1S5O85KEFhBTDm6uZ/ZNZS3/zuH813amUFmN6H269Bacypfrevb3TgLxT2VoxWNL3s4pklaD31zvX2g+0GPXgeVmx70Z/aeZKghXeFpwH22S/gtQqlWldQU+5Z7w1YFf74KN9JwKVjtClgewIYhtujD4Hki8QmJqKiOtr5eNHD7ATYSOtSSqk384qPbDKuJGjzESEbyZqZpgWCHCOA7NMWqMlM18LGFdQJGE6exN14iQMpM12g7ErIP+ss051FZsiusf7WNqoVGbuI5DsBVB8eb+5MJTryyfygFpM2H+ExtXx8nPAam/ygp32m4uPsjEbhw20oOplBDcx9oOnuWACwQNO5K0Gh0TCb7UH6he0yq2kP74potwAqhFiCkAP9mNmnX+l93Q7iZ/RrN8jw6M04uZqMrxi3NUGUy0cqgq7w+r/uFcdSLr464momgSqbtO5+Xf++YK1e9hqEqOQl9YUWadQkgWpa6/qwQB54ZLvYadUYqSvZqSkZnFamieziNVUPg8m9EPhLZJyEPATVkZbVIzaJvBh80ft67sfIk/+/7MCJBXvwj7+xK3ZaAVGjQFEnX2V55PfOXc+lGN08tr+0HRNf/XaxMI2+wT9gJX4ycxTIM=
jobs:
  build:
    name: build-${{ matrix.ghc }}-${{ matrix.stack }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        ghc: ['9.2.5']
        stack: ['2.9.1']
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
    - uses: actions/checkout@v3
    - name: stack setup
      uses: haskell/actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        enable-stack: true
        stack-version: ${{ matrix.stack }}
    - name: cache ~/.stack
      uses: actions/cache@v3
      with:
        path: ~/.stack
        key: stack-${{ matrix.ghc }}-${{ matrix.stack }}-${{ runner.os }}
    - name: install dependencies
      run: |
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks --only-dependencies
    - name: build
      run: |
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks
    - name: test
      run: |
        stack test --system-ghc
    - name: set OS (linux x86)
      if: ${{ runner.os }}==ubuntu-latest
      run: echo os=linux >> $GITHUB_ENV
    - name: set OS (mac x86)
      if: ${{ runner.os }}==macOS-latest
      run: echo os=osx >> $GITHUB_ENV
    - name: set OS (windows)
      if: ${{ runner.os }}==windows-latest
      run: echo os=windows >> $GITHUB_ENV
    - name: set ARCH (always x86_64 by now)
      run: echo arch="x86_64" >> $GITHUB_ENV
    - name: set bin path
      run: echo "{bin_path}={`stack path --local-bin`}" >> $GITHUB_ENV
    - name: set version
      run: echo "{version}={${{ github.ref }}}" >> $GITHUB_ENV
    - name: set archive name
      run: echo "{archive}={${{ env.bin_path }}/${{ env.program }}-${{ env.version }}-${{ env.os }}.${{ env.arch }}}" >> $GITHUB_ENV
    - name: information
      bash: shell
      run: |
        echo ${{ env.archive }}.tar.gz built
        echo ${{ env.archive }}.zip built
    # tar czf ${{ env.archive }}.tar.gz -C ${{ env.bin_path }} ${{ env.program }}
    # zip -j  ${{ env.archive }}.zip       ${{ env.bin_path }}/${{ env.program }}
    # - name: release
    #   uses: softprops/action-gh-release@v1
    #   if: startsWith(github.ref, 'refs/tags/')
    #   with:
    #     # tag_name: defaults to github.ref
    #     # name: defaults to tag name
    #     append_body: true
    #     token: ${{ api_key }}
    #     files: |
    #       ${{ env.archive }}.tar.gz
    #       ${{ env.archive }}.zip

